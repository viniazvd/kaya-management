'use strict';

require('dotenv').config();

const test = require('ava');

const models = require('../../../infra/sequelize/models');

test.beforeEach(() => models.user.destroy({ truncate: true }));
test.after.always(() => models.user.destroy({ truncate: true }));

test('list user', async t => {
  const userTest = { name: 'vinitest', email: 'emailtest@gmail.com', password: '123' };
  const newUser = await models.user.build(userTest);
  const result = await newUser.save();

  const list = await models.user.findAndCountAll();
  console.log(list.count);
  t.is(result.dataValues.name, 'vinitest');
});

test('create user', async t => {
  const userTest = { name: 'vinitest', email: 'emailtest@gmail.com', password: '123' };
  const newUser = await models.user.build(userTest);
  const result = await newUser.save();

  t.is(result.dataValues.name, 'vinitest');
});

test('remove user', async t => {
  const userTest = { email: 'remover@gmail.com' };
  const newUser = await models.user.build(userTest);
  await newUser.save();

  const removed = await models.user.destroy({ where: { email: 'remover@gmail.com' } });
  // console.log(removed)
  t.is(removed, 1);
});

test('update user', async t => {
  const userTest = { name: 'vinitest', email: 'emailtest@gmail.com', password: '123' };
  const newUser = await models.user.build(userTest);
  await newUser.save();

  const userUpdated = { email: 'emailtest2@gmail.com' };
  const updated = await models.user.update(userUpdated, { where: { email: 'emailtest@gmail.com' } });
  // console.log(updated)
  t.is(updated[0], 3);
});
//# sourceMappingURL=../../../../node_modules/.cache/ava/edd07b13a8e44b9fb099b212d54cb95a.js.map