{"version":3,"sources":["customers.test.js"],"names":["require","config","test","models","beforeEach","user","destroy","truncate","t","userTest","name","email","password","newUser","build","result","save","is","dataValues","userUpdated","updated","update","where","console","log"],"mappings":";;AAAAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,MAAMC,OAAOF,QAAQ,KAAR,CAAb;;AAEA,MAAMG,SAASH,QAAQ,iCAAR,CAAf;;AAEAE,KAAKE,UAAL,CAAgB,MAAMD,OAAOE,IAAP,CAAYC,OAAZ,CAAoB,EAACC,UAAU,IAAX,EAApB,CAAtB;AACA;;AAEAL,KAAK,aAAL,EAAoB,MAAMM,CAAN,IAAW;AAC7B,QAAMC,WAAW,EAAEC,MAAM,UAAR,EAAoBC,OAAO,qBAA3B,EAAkDC,UAAU,KAA5D,EAAjB;AACA,QAAMC,UAAU,MAAMV,OAAOE,IAAP,CAAYS,KAAZ,CAAkBL,QAAlB,CAAtB;AACA,QAAMM,SAAS,MAAMF,QAAQG,IAAR,EAArB;;AAEAR,IAAES,EAAF,CAAKF,OAAOG,UAAP,CAAkBR,IAAvB,EAA6B,UAA7B;AACD,CAND;;AAQAR,KAAK,aAAL,EAAoB,MAAMM,CAAN,IAAW;AAC7B,QAAMC,WAAW,EAAEC,MAAM,UAAR,EAAoBC,OAAO,qBAA3B,EAAkDC,UAAU,KAA5D,EAAjB;AACA,QAAMC,UAAU,MAAMV,OAAOE,IAAP,CAAYS,KAAZ,CAAkBL,QAAlB,CAAtB;AACA,QAAMM,SAAS,MAAMF,QAAQG,IAAR,EAArB;;AAEA,QAAMG,cAAc,EAAET,MAAM,UAAR,EAAoBC,OAAO,sBAA3B,EAAmDC,UAAU,KAA7D,EAApB;AACA,QAAMQ,UAAU,MAAMjB,OAAOE,IAAP,CAAYgB,MAAZ,CAAmBF,WAAnB,EAAgC,EAAEG,OAAO,EAAEZ,MAAM,UAAR,EAAT,EAAhC,CAAtB;AACAa,UAAQC,GAAR,CAAYJ,OAAZ;;AAEAZ,IAAES,EAAF,CAAKF,OAAOG,UAAP,CAAkBP,KAAvB,EAA8B,qBAA9B;AACD,CAVD","file":"customers.test.js","sourcesContent":["require('dotenv').config()\n\nconst test = require('ava')\n\nconst models = require('../../../infra/sequelize/models')\n\ntest.beforeEach(() => models.user.destroy({truncate: true}))\n// test.after.always(() => models.user.destroy({truncate: true}))\n\ntest('create user', async t => {\n  const userTest = { name: 'vinitest', email: 'emailtest@gmail.com', password: '123' }\n  const newUser = await models.user.build(userTest)\n  const result = await newUser.save()\n\n  t.is(result.dataValues.name, 'vinitest')\n})\n\ntest('update user', async t => {\n  const userTest = { name: 'vinitest', email: 'emailtest@gmail.com', password: '123' }\n  const newUser = await models.user.build(userTest)\n  const result = await newUser.save()\n\n  const userUpdated = { name: 'vinitest', email: 'emailtest2@gmail.com', password: '123' }\n  const updated = await models.user.update(userUpdated, { where: { name: 'vinitest' } })\n  console.log(updated)\n  \n  t.is(result.dataValues.email, 'emailtest@gmail.com')\n})\n"]}