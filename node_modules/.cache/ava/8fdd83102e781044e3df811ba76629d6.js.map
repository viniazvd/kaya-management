{"version":3,"sources":["auth.test.js"],"names":["require","config","test","models","beforeEach","t","user","destroy","truncate","after","always","serial","userTest","name","email","password","newUser","build","result","save","is","dataValues"],"mappings":";;AAAAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,MAAMC,OAAOF,QAAQ,KAAR,CAAb;;AAEA,MAAMG,SAASH,QAAQ,iCAAR,CAAf;;AAEAE,KAAKE,UAAL,CAAgBC,KAAKF,OAAOG,IAAP,CAAYC,OAAZ,CAAoB,EAACC,UAAU,IAAX,EAApB,CAArB;AACAN,KAAKO,KAAL,CAAWC,MAAX,CAAkBL,KAAKF,OAAOG,IAAP,CAAYC,OAAZ,CAAoB,EAACC,UAAU,IAAX,EAApB,CAAvB;;AAEAN,KAAKS,MAAL,CAAY,QAAZ,EAAsB,MAAMN,CAAN,IAAW;AAC/B,QAAMO,WAAW,EAAEC,MAAM,UAAR,EAAoBC,OAAO,qBAA3B,EAAkDC,UAAU,KAA5D,EAAjB;AACA,QAAMC,UAAU,MAAMb,OAAOG,IAAP,CAAYW,KAAZ,CAAkBL,QAAlB,CAAtB;AACA,QAAMM,SAAS,MAAMF,QAAQG,IAAR,EAArB;;AAEAd,IAAEe,EAAF,CAAKF,OAAOG,UAAP,CAAkBP,KAAvB,EAA8B,qBAA9B;AACD,CAND","file":"auth.test.js","sourcesContent":["require('dotenv').config()\n\nconst test = require('ava')\n\nconst models = require('../../../infra/sequelize/models')\n\ntest.beforeEach(t => models.user.destroy({truncate: true}))\ntest.after.always(t => models.user.destroy({truncate: true}))\n\ntest.serial('signup', async t => {\n  const userTest = { name: 'vinitest', email: 'emailtest@gmail.com', password: '123' }\n  const newUser = await models.user.build(userTest)\n  const result = await newUser.save()\n\n  t.is(result.dataValues.email, 'emailtest@gmail.com')\n})\n"]}